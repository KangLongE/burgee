문제 입력 형식
위 두 줄은 문제 지문
1. 문제
2. 보기
3. 5지
4. 선다
5. 형 맞춰서 하세요
3 // 답 숫자로만 쓰시오 바로 밑에 적어야해 한 칸 띄면 안돤다..
다음 중 C 언어에서 정수를 입력받는 함수로 가장 적절한 것은 무엇인가? //하급 문제

printf()
scanf()
gets()
puts()
fopen()
2
다음 중 C 언어에서 정수형 변수를 올바르게 선언한 것은 무엇인가?

int 1num;
integer num;
int num;
num int;
int = num;
3
다음 중 C 언어에서 조건문에 해당하는 키워드는 무엇인가?

switch
if
loop
function
case
2
다음 중 C 언어에서 문자 하나를 저장하기에 적절한 자료형은 무엇인가?

int
float
char
double
long
3
다음 중 C 언어에서 배열을 선언하는 방법으로 올바른 것은 무엇인가?

int array;
int array(10);
int array[];
int array[10];
int[10] array;
4
다음 중 C 언어에서 무한 루프를 만드는 코드로 올바른 것은 무엇인가?

for (i = 0; i < 10; i--)
while (1)
if (1)
do while (1)
repeat until (0)
2
다음 중 C 언어에서 포인터 변수 선언이 올바른 것은 무엇인가?

int ptr;
int* ptr();
*int ptr;
int *ptr;
ptr int*;

4
다음 중 C 언어에서 포인터 변수 선언이 올바른 것은 무엇인가?

int ptr;
int* ptr();
*int ptr;
int *ptr;
ptr int*;
4
다음 중 printf() 함수에서 정수 출력 형식 지정자로 올바른 것은 무엇인가?

%c
%s
%d
%f
%lf
3
다음 중 C 언어의 논리 연산자가 아닌 것은 무엇인가?

&&
||
!
==
!=
4
다음 중 C 언어에서 파일을 쓰기 모드로 여는 함수 호출은 무엇인가?

fopen("file.txt", "r")
fopen("file.txt", "w")
fopen("file.txt", "rw")
fwrite("file.txt")
fread("file.txt")
2
다음 중 C 언어에서 문자 상수를 표현하는 방법은?

"a"
'a'
a
"abc"
'abc'
2
다음 중 C 언어에서 부울(Boolean) 값을 나타내는 자료형은?

bool
boolean
int
char
void
3
int다음 중 C 언어에서 주석을 작성하는 올바른 방법은?

// 주석 내용
/* 주석 내용 */
# 주석 내용
<!-- 주석 내용 -->
A, B 모두 맞음
5
다음 중 변수의 초기화가 올바른 것은?

int num = 10;
int num; = 10
int num 10;
int = 10 num;
num int = 10;
1
다음 중 배열을 함수의 인자로 전달할 때 발생하는 현상으로 올바른 설명은? //중급

배열 전체가 복사된다.
배열은 포인터로 전달된다.
배열은 전역변수가 된다.
배열 크기를 반드시 전달해야 한다.
배열 인자는 사용할 수 없다.
2
다음 중 malloc() 함수에 대한 설명으로 옳지 않은 것은?

동적 메모리를 할당한다.
반환값은 void 포인터이다.
할당된 메모리는 자동으로 해제된다.
stdlib.h 헤더 파일이 필요하다.
반환값을 형 변환하여 사용하는 것이 일반적이다.
3
다음 중 문자열을 비교하는 함수로 가장 적절한 것은?

strcpy()
strcat()
strcmp()
strlen()
scanf()
3
다음 중 함수 포인터에 대한 선언으로 올바른 것은?

int ptr(int*);
int *ptr(int);
int (*ptr)(int);
(*int ptr)(int);
int ptr(*)(int);
3
다음 중 포인터를 사용하여 배열의 각 요소에 접근하는 코드로 올바른 것은?

arr = arr + 1;
*(arr + i) = 10;
arr(i) = 10;
*arr[i] = 10;
arr -> i = 10;
2
다음 중 C 언어에서 포인터와 배열의 관계에 대한 설명으로 올바른 것은?

배열은 포인터가 아니다.
포인터는 배열의 크기를 자동으로 추적한다.
배열 이름은 배열의 첫 번째 요소의 주소이다.
포인터는 배열보다 항상 느리다.
배열은 포인터와 완전히 동일한 개념이다.
3
다음 중 free() 함수에 대한 설명으로 틀린 것은?

malloc 또는 calloc으로 할당된 메모리를 해제한다.
포인터가 가리키는 메모리를 해제한다.
해제 후 해당 포인터는 자동으로 NULL이 된다.
stdlib.h에 선언되어 있다.
메모리 누수를 방지하기 위해 사용된다.
3
다음 중 함수 포인터를 선언하고 사용하는 올바른 예는?//상급

int ptr(*f)(int);
int (*f)(int) = &func;
int *f(int) = &func;
func = (*int)(f);
int f = (*func)(int);
2
다음 중 2차원 배열을 함수에 전달하는 방법으로 올바른 것은?

void func(int arr[][])
void func(int *arr[])
void func(int arr[][10])
void func(int **arr)
void func(arr[10][10])
3
다음 중 포인터 산술 연산으로 잘못된 것은?

ptr + 1
ptr - 1
ptr++
ptr = ptr + 4.5
*(ptr + 2)
4
다음 중 포인터 배열 선언으로 올바른 것은?

int *arr();
int arr(*)[];
int *arr[5];
int (*arr)[5];
int arr[5]*;
3
다음 중 동적 2차원 배열 할당으로 올바른 코드는?

int **arr = malloc(sizeof(int*));
int arr = malloc(5 * 5);
int **arr = malloc(5 * sizeof(int*));
int *arr[5] = malloc(sizeof(int));
int *arr = malloc(5)[5];
3
다음 중 구조체 포인터에서 멤버 접근이 올바른 것은?

(*ptr).x
*ptr.x
ptr(x)
ptr->*x
ptr.x
1
다음 중 재귀 함수의 기본 구성에 반드시 포함되어야 하는 것은?

반복문
파일 입출력
종료 조건
switch 문
포인터 연산
3
다음 중 const int *p;의 의미는 무엇인가?

p는 상수를 가리킨다.
p는 값을 변경할 수 있다.
*p는 수정 가능하다.
p와 *p 모두 상수이다.
*p는 다른 주소를 가리킨다.
1
다음 중 함수 포인터 배열 선언으로 올바른 것은?

int *fptr[](int);
int (*fptr[3])(int);
int *(*fptr[3])(int);
int fptr[3]*();
int *fptr[3]();
2
다음 중 문자열 길이를 구하는 함수는?

strcpy()
strcat()
strlen()
strcmp()
malloc()
3
다음 중 문자열 길이를 구하는 함수는?

strcpy()
strcat()
strlen()
strcmp()
malloc()
3
다음 코드의 결과는?
int a = 5; printf("%d", a++ + ++a);
10
11
미정 (정의되지 않음)
12
컴파일 에러
3
다음 중 동적 메모리 누수를 방지하는 방법으로 옳은 것은?

free()를 호출하지 않는다.
메모리 주소를 초기화하지 않는다.
malloc() 후 free()를 반드시 호출한다.
sizeof를 생략한다.
realloc()으로만 해제한다.
3
다음 중 다차원 배열을 포인터로 받는 함수 선언은?

void func(int **arr);
void func(int arr[][]);
void func(int arr[10][10]);
void func(*arr[10][10]);
void func(arr[][]);
3
